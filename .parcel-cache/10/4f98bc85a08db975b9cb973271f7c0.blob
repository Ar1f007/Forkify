var _modelJs = require('./model.js');
var _viewsRecipeViewJs = require('./views/recipeView.js');
var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
var _viewsRecipeViewJsDefault = _parcelHelpers.interopDefault(_viewsRecipeViewJs);
var _viewsSearchViewJs = require('./views/searchView.js');
var _viewsSearchViewJsDefault = _parcelHelpers.interopDefault(_viewsSearchViewJs);
var _viewsResultsViewJs = require('./views/resultsView.js');
var _viewsResultsViewJsDefault = _parcelHelpers.interopDefault(_viewsResultsViewJs);
// import 'core-js/stable';
// import 'regenerator-runtime/runtime';
if (module.hot) {
  module.hot.accept();
}
const recipeContainer = document.querySelector('.recipe');
// https://forkify-api.herokuapp.com/v2
// /////////////////////////////////////
const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);
    if (!id) return;
    _viewsRecipeViewJsDefault.default.renderSpinner();
    // 1. Loading recipe
    await _modelJs.loadRecipe(id);
    const {recipe} = _modelJs.state;
    // 2. rendering recipe
    _viewsRecipeViewJsDefault.default.render(_modelJs.state.recipe);
  } catch (err) {
    // alert(err);
    _viewsRecipeViewJsDefault.default.renderError();
  }
};
const controlSearchResults = async function () {
  try {
    _viewsResultsViewJsDefault.default.renderSpinner();
    const query = _viewsSearchViewJsDefault.default.getQuery();
    if (!query) return;
    await _modelJs.loadSearchResults(query);
    _viewsResultsViewJsDefault.default.render(_modelJs.state.search.results);
  } catch (error) {
    console.log(error);
  }
};
// controlRecipes();
// window.addEventListener('hashchange', showRecipe); // show recipe associated with id
// window.addEventListener('load', showRecipe); // load the page with associated id(if there is any)
// ['hashchange', 'load'].forEach(ev =>
// window.addEventListener(ev, controlRecipes)
// );
const init = function () {
  _viewsRecipeViewJsDefault.default.addHandlerRender(controlRecipes);
  _viewsSearchViewJsDefault.default.addHandlerRender(controlSearchResults);
};
init();
